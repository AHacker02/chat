[{"E:\\Projects\\imessage-clone\\src\\index.js":"1","E:\\Projects\\imessage-clone\\src\\reportWebVitals.js":"2","E:\\Projects\\imessage-clone\\src\\components\\app\\App.js":"3","E:\\Projects\\imessage-clone\\src\\components\\imessage\\imessage.js":"4","E:\\Projects\\imessage-clone\\src\\components\\sidebar\\sidebar.js":"5","E:\\Projects\\imessage-clone\\src\\components\\chat\\chat.js":"6","E:\\Projects\\imessage-clone\\src\\components\\sidebar\\sidebarchat\\sidebarchat.js":"7","E:\\Projects\\imessage-clone\\src\\store.js":"8","E:\\Projects\\imessage-clone\\src\\components\\login\\login.js":"9","E:\\Projects\\imessage-clone\\src\\utils\\firebase.js":"10","E:\\Projects\\imessage-clone\\src\\features\\userSlice.js":"11","E:\\Projects\\imessage-clone\\src\\features\\chatSlice.js":"12","E:\\Projects\\imessage-clone\\src\\components\\chat\\message\\message.js":"13","E:\\Projects\\chat\\imessage-clone\\src\\index.js":"14","E:\\Projects\\chat\\imessage-clone\\src\\store.js":"15","E:\\Projects\\chat\\imessage-clone\\src\\components\\app\\App.js":"16","E:\\Projects\\chat\\imessage-clone\\src\\features\\chatSlice.js":"17","E:\\Projects\\chat\\imessage-clone\\src\\features\\userSlice.js":"18","E:\\Projects\\chat\\imessage-clone\\src\\components\\imessage\\imessage.js":"19","E:\\Projects\\chat\\imessage-clone\\src\\utils\\firebase.js":"20","E:\\Projects\\chat\\imessage-clone\\src\\components\\chat\\chat.js":"21","E:\\Projects\\chat\\imessage-clone\\src\\components\\sidebar\\sidebar.js":"22","E:\\Projects\\chat\\imessage-clone\\src\\components\\chat\\message\\message.js":"23","E:\\Projects\\chat\\imessage-clone\\src\\components\\sidebar\\sidebarchat\\sidebarchat.js":"24","E:\\Projects\\chat\\imessage-clone\\src\\utils\\history.js":"25","E:\\Projects\\chat\\imessage-clone\\src\\components\\common\\formtextfield.js":"26","E:\\Projects\\chat\\imessage-clone\\src\\utils\\api.js":"27","E:\\Projects\\chat\\imessage-clone\\src\\utils\\endpoints.js":"28","E:\\Projects\\chat\\imessage-clone\\src\\features\\appSlice.js":"29","E:\\Projects\\chat\\imessage-clone\\src\\components\\authorize\\register\\register.js":"30","E:\\Projects\\chat\\imessage-clone\\src\\components\\authorize\\login\\login.js":"31"},{"size":648,"mtime":1609960325384,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"33"},{"size":950,"mtime":1610035024511,"results":"35","hashOfConfig":"33"},{"size":407,"mtime":1610035024789,"results":"36","hashOfConfig":"33"},{"size":1765,"mtime":1610035024394,"results":"37","hashOfConfig":"33"},{"size":2369,"mtime":1610043163402,"results":"38","hashOfConfig":"33"},{"size":681,"mtime":1610039064691,"results":"39","hashOfConfig":"33"},{"size":310,"mtime":1610035279177,"results":"40","hashOfConfig":"33"},{"size":589,"mtime":1610032899709,"results":"41","hashOfConfig":"33"},{"size":592,"mtime":1609961550827,"results":"42","hashOfConfig":"33"},{"size":726,"mtime":1610033547683,"results":"43","hashOfConfig":"33"},{"size":565,"mtime":1610035257877,"results":"44","hashOfConfig":"33"},{"size":512,"mtime":1610043069144,"results":"45","hashOfConfig":"33"},{"size":301,"mtime":1610175553973,"results":"46","hashOfConfig":"47"},{"size":396,"mtime":1610170530921,"results":"48","hashOfConfig":"47"},{"size":1001,"mtime":1610207247664,"results":"49","hashOfConfig":"47"},{"size":2310,"mtime":1610387508453,"results":"50","hashOfConfig":"47"},{"size":2217,"mtime":1610296916673,"results":"51","hashOfConfig":"47"},{"size":2096,"mtime":1610388509902,"results":"52","hashOfConfig":"47"},{"size":592,"mtime":1609961550827,"results":"53","hashOfConfig":"47"},{"size":1570,"mtime":1610388912701,"results":"54","hashOfConfig":"47"},{"size":3144,"mtime":1610383496784,"results":"55","hashOfConfig":"47"},{"size":521,"mtime":1610389027257,"results":"56","hashOfConfig":"47"},{"size":895,"mtime":1610384515718,"results":"57","hashOfConfig":"47"},{"size":89,"mtime":1610098267216,"results":"58","hashOfConfig":"47"},{"size":441,"mtime":1610139598914,"results":"59","hashOfConfig":"47"},{"size":1826,"mtime":1610297106041,"results":"60","hashOfConfig":"47"},{"size":307,"mtime":1610204247029,"results":"61","hashOfConfig":"47"},{"size":646,"mtime":1610175594353,"results":"62","hashOfConfig":"47"},{"size":2133,"mtime":1610184084990,"results":"63","hashOfConfig":"47"},{"size":2839,"mtime":1610204350652,"results":"64","hashOfConfig":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1mwyq9r",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"99ibh3",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},"E:\\Projects\\imessage-clone\\src\\index.js",[],["135","136"],"E:\\Projects\\imessage-clone\\src\\reportWebVitals.js",[],"E:\\Projects\\imessage-clone\\src\\components\\app\\App.js",["137"],"E:\\Projects\\imessage-clone\\src\\components\\imessage\\imessage.js",[],"E:\\Projects\\imessage-clone\\src\\components\\sidebar\\sidebar.js",[],"E:\\Projects\\imessage-clone\\src\\components\\chat\\chat.js",[],"E:\\Projects\\imessage-clone\\src\\components\\sidebar\\sidebarchat\\sidebarchat.js",[],"E:\\Projects\\imessage-clone\\src\\store.js",[],"E:\\Projects\\imessage-clone\\src\\components\\login\\login.js",[],"E:\\Projects\\imessage-clone\\src\\utils\\firebase.js",[],"E:\\Projects\\imessage-clone\\src\\features\\userSlice.js",[],"E:\\Projects\\imessage-clone\\src\\features\\chatSlice.js",[],"E:\\Projects\\imessage-clone\\src\\components\\chat\\message\\message.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\index.js",[],["138","139"],"E:\\Projects\\chat\\imessage-clone\\src\\store.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\app\\App.js",["140"],"import \"./App.css\";\nimport Imessage from \"../imessage/imessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport history from \"../../utils/history\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport { selectUser } from \"../../features/userSlice\";\nimport Login from \"../authorize/login/login\";\nimport { useEffect } from \"react\";\nimport Register from \"../authorize/register/register\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!user) {\n      history.push(\"/login\");\n    } else {\n      history.push(\"/\");\n    }\n  }, [user]);\n\n  return (\n    <Router history={history}>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/\">{user && <Imessage />}</Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\Projects\\chat\\imessage-clone\\src\\features\\chatSlice.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\features\\userSlice.js",["141"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../utils/api\";\nimport { LOGIN, SIGNUP } from \"../utils/endpoints\";\nimport { setFormError, setLoading } from \"./appSlice\";\nimport history from \"../utils/history\";\n\nconst initialUser = sessionStorage.getItem(\"user\")\n  ? JSON.parse(sessionStorage.getItem(\"user\"))\n  : null;\n\nexport const login = createAsyncThunk(\n  \"user/login\",\n  async (userCreds, thunkAPI) => {\n    try {\n      thunkAPI.dispatch(setLoading({ name: \"login\", loading: true }));\n      const response = await api.get(LOGIN, {\n        params: userCreds,\n      });\n      thunkAPI.dispatch(setLoading({ name: \"login\", loading: false }));\n\n      return response.data.data;\n    } catch (err) {\n      thunkAPI.dispatch(setFormError({ name: \"login\", error: err.message }));\n      thunkAPI.dispatch(setLoading({ name: \"login\", loading: false }));\n      throw new Error(err);\n    }\n  }\n);\n\nexport const register = createAsyncThunk(\n  \"user/register\",\n  async (userDetails, thunkAPI) => {\n    try {\n      thunkAPI.dispatch(setLoading({ name: \"register\", loading: true }));\n      const response = await api.post(SIGNUP, JSON.stringify(userDetails));\n      thunkAPI.dispatch(\n        login({ email: userDetails.email, password: userDetails.password })\n      );\n      thunkAPI.dispatch(setLoading({ name: \"register\", loading: false }));\n      return response.data.data;\n    } catch (e) {\n      thunkAPI.dispatch(setFormError({ name: \"register\", error: e.message }));\n      thunkAPI.dispatch(setLoading({ name: \"register\", loading: false }));\n      throw new Error(e);\n    }\n  }\n);\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: initialUser,\n  },\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      localStorage.removeItem(\"user\");\n    },\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n      state.user = action.payload;\n      sessionStorage.setItem(\"user\", JSON.stringify(action.payload));\n    },\n  },\n});\n\nexport const { logout } = userSlice.actions;\nexport const selectUser = (state) => state.user.user?.user;\nexport const selectToken = (state) => state.user.user?.token;\nexport default userSlice.reducer;\n","E:\\Projects\\chat\\imessage-clone\\src\\components\\imessage\\imessage.js",["142","143","144"],"E:\\Projects\\chat\\imessage-clone\\src\\utils\\firebase.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\chat\\chat.js",["145","146","147"],"E:\\Projects\\chat\\imessage-clone\\src\\components\\sidebar\\sidebar.js",["148","149","150"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Avatar,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport RateReviewOutlinedIcon from \"@material-ui/icons/RateReviewOutlined\";\nimport \"./sidebar.css\";\nimport SidebarChat from \"./sidebarchat/sidebarchat\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\";\nimport db, { auth } from \"../../utils/firebase\";\nimport {\n  searchContact,\n  selectChat,\n  selectChatList,\n  selectSearchResult,\n} from \"../../features/chatSlice\";\nimport { selectLoading } from \"../../features/appSlice\";\n\nconst Sidebar = () => {\n  const user = useSelector(selectUser);\n  const chats = Object.values(useSelector(selectChatList));\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => selectLoading(state, \"search\"));\n  const searchResult = useSelector(selectSearchResult);\n\n  const addChat = () => {\n    const chatName = prompt(\"Please enter a chat name\");\n    if (chatName) {\n      db.collection(\"chats\").add({\n        chatName: chatName,\n      });\n    }\n  };\n\n  const handleSearch = (e) => {\n    if (e.target.value) {\n      dispatch(searchContact(e.target.value));\n    }\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar\n          onClick={() => auth.signOut()}\n          src={\n            user.photo ??\n            `https://ui-avatars.com/api/?name=${user.firstName}+${user.lastName}&background=random`\n          }\n          className=\"sidebar__avatar\"\n        />\n        <div className=\"sidebar__input\">\n          {/* <SearchIcon />*/}\n          {/*<input placeholder=\"Search\" />*/}\n          <Autocomplete\n            freeSolo\n            disableClearable\n            onChange={(event, value) => {\n              dispatch(selectChat(value));\n            }}\n            loading={loading}\n            filterOptions={(options, state) => options}\n            getOptionLabel={(option) =>\n              `${option.firstName} ${option.lastName}`\n            }\n            options={searchResult}\n            renderInput={(params) => (\n              <TextField\n                onChange={handleSearch}\n                {...params}\n                placeholder=\"Search user\"\n                margin=\"dense\"\n                fullWidth\n                variant=\"outlined\"\n                InputProps={{\n                  ...params.InputProps,\n                  type: \"search\",\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            )}\n          />\n        </div>\n\n        <IconButton>\n          <RateReviewOutlinedIcon onClick={addChat} />\n        </IconButton>\n      </div>\n      <div className=\"sidebar__chat\">\n        {chats.map((chat) => (\n          <SidebarChat key={chat.id} contact={chat} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","E:\\Projects\\chat\\imessage-clone\\src\\components\\chat\\message\\message.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\sidebar\\sidebarchat\\sidebarchat.js",["151"],"import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport \"./sidebarchat.css\";\nimport { useDispatch } from \"react-redux\";\nimport { selectChat, setChatList } from \"../../../features/chatSlice\";\n\nconst SidebarChat = ({ contact }) => {\n  const dispatch = useDispatch();\n  return (\n    <div\n      onClick={() => {\n        dispatch(selectChat(contact));\n      }}\n      className=\"sidebarChat\"\n    >\n      <Avatar\n        src={\n          contact.photo ??\n          `https://ui-avatars.com/api/?name=${contact.firstName}+${contact.lastName}&background=random`\n        }\n      />\n      <div className=\"sidebarChat__info\">\n        <h3>{`${contact.firstName} ${contact.lastName}`}</h3>\n        <p>\n          {contact.lastMessage} <small>{contact.lastMessageTime}</small>\n        </p>\n        <small>{contact.Status}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default SidebarChat;\n","E:\\Projects\\chat\\imessage-clone\\src\\utils\\history.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\common\\formtextfield.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\utils\\api.js",["152","153"],"import axios from \"axios\";\nimport { BASE_URL, LOGIN } from \"./endpoints\";\nimport { login } from \"../features/userSlice\";\n\nconst createCustomAxios = () => {\n  let instance = axios.create({\n    baseURL: BASE_URL,\n  });\n  instance.interceptors.response.use(\n    (response) => successHandler(response),\n    (error) => errorHandler(error)\n  );\n\n  instance.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  instance.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n  //To add header again after refresh\n  if (\n    !instance.defaults.headers.common[\"Authorization\"] &&\n    sessionStorage.getItem(\"user\")\n  ) {\n    instance.defaults.headers.common[\"Authorization\"] = `Bearer ${\n      JSON.parse(sessionStorage.getItem(\"user\"))?.token\n    }`;\n  }\n  instance.CancelToken = axios.CancelToken;\n  return instance;\n};\nconst customAxios = createCustomAxios();\n\nconst successHandler = (response) => {\n  if (!response.data.isSuccess) {\n    return Promise.reject({\n      response: response,\n      message: response.data.message,\n    });\n  }\n  return response;\n};\n\nconst errorHandler = (error) => {\n  if (error.response.headers[\"application-error\"]) {\n    error.message = error.response.headers[\"application-error\"];\n  } else if (error.response.data.message) {\n    error.message = error.response.data.message;\n  }\n  return Promise.reject(error);\n};\nexport const saveAuthToken = (store) => (next) => (action) => {\n  if (action.type === \"user/login\") {\n    // after a successful login, update the token in the API\n    setToken(action.payload.token);\n  }\n\n  // continue processing this action\n  return next(action);\n};\n\nexport const cancelTokenSource = axios.CancelToken.source();\n\nexport function setToken(token) {\n  customAxios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n}\n\nexport default customAxios;\n","E:\\Projects\\chat\\imessage-clone\\src\\utils\\endpoints.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\features\\appSlice.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\authorize\\register\\register.js",[],"E:\\Projects\\chat\\imessage-clone\\src\\components\\authorize\\login\\login.js",["154"],"import \"./login.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport React from \"react\";\nimport { Button, FormControl, TextField, FormLabel } from \"@material-ui/core\";\nimport { auth, provider } from \"../../../utils/firebase\";\nimport FormTextField from \"../../common/formtextfield\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"../../../features/userSlice\";\nimport { Link } from \"react-router-dom\";\nimport {\n  selectFormError,\n  selectLoading,\n  setFormError,\n} from \"../../../features/appSlice\";\n\nconst fields = [\n  { name: \"email\", type: \"email\" },\n  { name: \"password\", type: \"password\" },\n];\n\nconst formName = \"login\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const formError = useSelector((state) => selectFormError(state, formName));\n  const loading = useSelector((state) => selectLoading(state, formName));\n\n  const googleSignIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((user) => {\n        signIn(signIn({ email: user.user.email }));\n      })\n      .catch((error) =>\n        dispatch(setFormError({ name: formName, error: error.message }))\n      );\n  };\n  const signIn = (userCreds) => {\n    dispatch(login(userCreds));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <div className=\"login__logo\">\n          <img src=\"https://i.redd.it/jdto14wkj9f51.png\" alt=\"\" />\n          <h1>iMessage</h1>\n        </div>\n        <FormControl\n          component=\"form\"\n          margin=\"normal\"\n          className=\"login__form\"\n          onSubmit={props.handleSubmit(signIn)}\n        >\n          {formError ? (\n            <FormLabel error filled>\n              {formError}\n            </FormLabel>\n          ) : null}\n          {fields.map((field) => (\n            <Field\n              key={field.name}\n              name={field.name}\n              type={field.type}\n              component={FormTextField}\n            />\n          ))}\n          <Button disabled={loading} type=\"submit\">\n            Sign In\n          </Button>\n        </FormControl>\n        <div className=\"login__social\">\n          <small>Or Sign In Using</small>\n          <img\n            onClick={googleSignIn}\n            src=\"https://img-authors.flaticon.com/google.jpg\"\n            alt=\"\"\n          />\n        </div>\n        <p>\n          Don't have an account?{\" \"}\n          <Link to=\"/register\">\n            <strong>Sign Up</strong>\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nconst validate = (values) => {\n  const errors = {};\n  fields.forEach((field) => {\n    if (!values[field.name]) {\n      errors[field.name] = `${\n        field.name.charAt(0).toLocaleUpperCase() + field.name.slice(1)\n      } cannot be empty`;\n    }\n  });\n  return errors;\n};\n\nexport default reduxForm({ form: formName, validate })(Login);\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":27,"column":7,"nodeType":"161","endLine":27,"endColumn":9,"suggestions":"162"},{"ruleId":"155","replacedBy":"163"},{"ruleId":"157","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":13,"column":9,"nodeType":"167","messageId":"168","endLine":13,"endColumn":17},{"ruleId":"165","severity":1,"message":"169","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":15},{"ruleId":"165","severity":1,"message":"170","line":6,"column":35,"nodeType":"167","messageId":"168","endLine":6,"endColumn":44},{"ruleId":"159","severity":1,"message":"171","line":30,"column":6,"nodeType":"161","endLine":30,"endColumn":8,"suggestions":"172"},{"ruleId":"159","severity":1,"message":"160","line":56,"column":6,"nodeType":"161","endLine":56,"endColumn":18,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"174","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"175","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":10},{"ruleId":"165","severity":1,"message":"176","line":10,"column":10,"nodeType":"167","messageId":"168","endLine":10,"endColumn":20},{"ruleId":"165","severity":1,"message":"174","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"177","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"178","line":6,"column":3,"nodeType":"167","messageId":"168","endLine":6,"endColumn":13},{"ruleId":"165","severity":1,"message":"179","line":5,"column":22,"nodeType":"167","messageId":"168","endLine":5,"endColumn":33},{"ruleId":"165","severity":1,"message":"180","line":2,"column":20,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"181","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":15},{"ruleId":"165","severity":1,"message":"182","line":4,"column":31,"nodeType":"167","messageId":"168","endLine":4,"endColumn":40},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["185"],["183"],["184"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'history' is defined but never used.","'userSlice' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["186"],["187"],"'useEffect' is defined but never used.","'db' is defined but never used.","'selectUser' is defined but never used.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'setChatList' is defined but never used.","'LOGIN' is defined but never used.","'login' is defined but never used.","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},"Update the dependencies array to be: [dispatch]",{"range":"194","text":"195"},"Update the dependencies array to be: [token]",{"range":"196","text":"197"},"Update the dependencies array to be: [connection, dispatch]",{"range":"198","text":"199"},[813,815],"[dispatch]",[987,989],"[token]",[1629,1641],"[connection, dispatch]"]